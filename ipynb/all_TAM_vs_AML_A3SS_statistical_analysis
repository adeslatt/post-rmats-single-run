{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed8e4e35-7611-4ef8-98c6-7b4741a8b1d5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "01292f09-0369-4bfc-b9ba-b74831015962",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load necessary libraries\n",
    "library(dplyr)\n",
    "library(tidyr)\n",
    "library(reshape2)\n",
    "library(ggplot2)\n",
    "library(pdftools)\n",
    "library(gridExtra)\n",
    "\n",
    "# Read the datasets\n",
    "unpaired_data <- read.csv(\"unpaired_final_matrix.csv\", stringsAsFactors = FALSE)\n",
    "paired_data <- read.csv(\"paired_final_matrix.csv\", stringsAsFactors = FALSE)\n",
    "\n",
    "# Transform paired data to long format\n",
    "paired_data_long <- paired_data %>%\n",
    "  pivot_longer(cols = -X, names_to = \"State\", values_to = \"Expression\")\n",
    "\n",
    "# Calculate mean expression for paired data\n",
    "mean_AML_paired <- paired_data_long %>%\n",
    "  filter(State == \"AML\") %>%\n",
    "  group_by(X) %>%\n",
    "  summarise(mean_AML = mean(Expression), .groups = 'drop')\n",
    "\n",
    "# Calculate slopes for paired data\n",
    "paired_slopes <- paired_data_long %>%\n",
    "  filter(State %in% c(\"preAML\", \"AML\")) %>%\n",
    "  group_by(X, State) %>%\n",
    "  summarise(Mean = mean(Expression), .groups = 'drop') %>%\n",
    "  pivot_wider(names_from = State, values_from = Mean) %>%\n",
    "  mutate(Paired_Slope = AML - preAML)\n",
    "\n",
    "# Transform unpaired data to long format\n",
    "unpaired_data_long <- unpaired_data %>%\n",
    "  pivot_longer(cols = -X, names_to = \"State\", values_to = \"Expression\")\n",
    "\n",
    "# Calculate slopes for unpaired data using mean_AML from paired data\n",
    "unpaired_slopes <- unpaired_data_long %>%\n",
    "  filter(State %in% c(\"preAML\", \"noAML\")) %>%\n",
    "  group_by(X, State) %>%\n",
    "  summarise(Mean = mean(Expression), .groups = 'drop') %>%\n",
    "  pivot_wider(names_from = State, values_from = Mean) %>%\n",
    "  left_join(mean_AML_paired, by = \"X\") %>%\n",
    "  mutate(Unpaired_Slope_preAML = mean_AML - preAML,\n",
    "         Unpaired_Slope_noAML = mean_AML - noAML)\n",
    "\n",
    "# Combine slopes data\n",
    "slope_data_consistent <- paired_slopes %>%\n",
    "  left_join(unpaired_slopes %>% select(X, Unpaired_Slope_preAML), by = \"X\") %>%\n",
    "  filter(!is.na(Paired_Slope) & !is.na(Unpaired_Slope_preAML)) %>%\n",
    "  mutate(Consistent = sign(Paired_Slope) == sign(Unpaired_Slope_preAML))\n",
    "\n",
    "slope_data_opposite <- paired_slopes %>%\n",
    "  left_join(unpaired_slopes %>% select(X, Unpaired_Slope_noAML), by = \"X\") %>%\n",
    "  filter(!is.na(Paired_Slope) & !is.na(Unpaired_Slope_noAML)) %>%\n",
    "  mutate(Opposite = sign(Paired_Slope) != sign(Unpaired_Slope_noAML))\n",
    "\n",
    "# Perform Fisher's Exact Test for consistent\n",
    "consistent_table <- table(slope_data_consistent$Consistent)\n",
    "if (length(consistent_table) == 2) {\n",
    "  fisher_test_consistent <- fisher.test(matrix(consistent_table, ncol = 2))\n",
    "} else {\n",
    "  fisher_test_consistent <- NULL\n",
    "  cat(\"Not enough data for Fisher's Exact Test on consistent slopes.\\n\")\n",
    "}\n",
    "\n",
    "# Perform Fisher's Exact Test for opposite\n",
    "opposite_table <- table(slope_data_opposite$Opposite)\n",
    "if (length(opposite_table) == 2) {\n",
    "  fisher_test_opposite <- fisher.test(matrix(opposite_table, ncol = 2))\n",
    "} else {\n",
    "  fisher_test_opposite <- NULL\n",
    "  cat(\"Not enough data for Fisher's Exact Test on opposite slopes.\\n\")\n",
    "}\n",
    "\n",
    "# Save cluster gene symbols to CSV files\n",
    "write.csv(cluster_1_genes$geneSymbol, \"2024July25_paired_A3SS_vwts_cluster_1.csv\", quote = FALSE, row.names = FALSE)\n",
    "write.csv(cluster_2_genes$geneSymbol, \"2024July25_paired_A3SS_vwts_cluster_2.csv\", quote = FALSE, row.names = FALSE)\n",
    "write.csv(cluster_3_genes$geneSymbol, \"2024July25_paired_A3SS_vwts_cluster_3.csv\", quote = FALSE, row.names = FALSE)\n",
    "write.csv(cluster_4_genes$geneSymbol, \"2024July25_paired_A3SS_vwts_cluster_4.csv\", quote = FALSE, row.names = FALSE)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
